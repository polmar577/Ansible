---

#################### Backup the device  ######################################

- hosts: localhost

  tasks:
   - name: Get ansible date/time facts
     setup:
       filter: "ansible_date_time"
       gather_subset: "!all"

   - name: Store DTG as fact
     set_fact:
       DTG: "{{ ansible_date_time.date }}"

   - name: Create Directory {{hostvars.localhost.DTG}}
     file:
      path: ~/backups/{{hostvars.localhost.DTG}}
      state: directory
  run_once: true

- hosts: SWITCHES 

  tasks:

   - name: Backup  
     cisco.ios.ios_command:
       commands: show run  
     register: config

   - name: Save output to ~/backups/
     copy:
       content: "{{config.stdout[0]}}"
       dest: "~/backups/{{hostvars.localhost.DTG}}/{{inventory_hostname}}-{{hostvars.localhost.DTG}}-config.txt"
       
- hosts: SWITCHES 

  vars:
    command_list:
      - show etherchannel summary 
      - show cdp neigh 
      - sh switch stack-ports
      - sh switch 
      - show environment all
      - show cdp neighbors detail
      - show version 
      - show license usage 
      - show clock
      - show users
      - show boot
      - show int status
      - show arp
      - show ip interface brief
      - show mac address-table
      - show vtp status
      - show inventory
      - show spanning-tree

  tasks:
   - name: Run the SHOW commands and save output 
     ios_command:
       commands: "{{ command_list }}"
     register: showoutput

   - name: "Put all the files together into one nice text file"
     template: 
       src: template.j2 
       dest: "~/backups/{{hostvars.localhost.DTG}}/{{ inventory_hostname }}-{{hostvars.localhost.DTG}}-showoutput.txt"

- hosts: SWITCHES

  tasks:
   - name: Backup Catalyst Switch 

     ios_config:
       backup: yes
       backup_options:
         filename: "{{inventory_hostname}}-{{hostvars.localhost.DTG}}-config.txt"
         dir_path: /home/mark/backups/{{hostvars.localhost.DTG}}


################### Perform the Upgrade ####################################

- name: Perform the Upgrade
  hosts: SWITCHES
  gather_facts: no
  vars:
    desired_ios_version: 16.12.07
    #upgrade_ios_filename: "cat9k_lite_iosxe.17.06.05.SPA.bin"
    upgrade_ios_filename: "cat9k_lite_iosxe.16.12.07.SPA.bin"
    #upgrade_ios_md5: "77f9504141dad5db1aef7c355051254b"
    upgrade_ios_md5: "ce156add262f1d4a0c798a13aa75672c"
    
  tasks:

## Copy software to target device
    - name: Copy Image // This could take up to 60 minutes
      ansible.netcommon.net_put:
      
        src: ~/Downloads/{{upgrade_ios_filename}}
        dest: flash:/{{upgrade_ios_filename}}
      vars:
        ansible_command_timeout: 19000
        ansible_network_cli_ssh_type: paramiko
        protocol: scp
        ansible_python_interpreter: /usr/bin/python3.10

## Check MD5 Hash
    - name: Check MD5 Hash
      ios_command:
        commands:
          - command: "verify /md5 flash:{{upgrade_ios_filename}} {{ upgrade_ios_md5}}"
      register: md5_result
      vars:
        ansible_command_timeout: 420

## Set the Boot Variable
    - name: Set Boot Variable
      ios_config:
        commands:
          - 'boot system flash:packages.conf'
        save_when: always

## Install image to flash
    - name: Install Image to Flash
      cli_command:
        command: install add file flash:cat9k_lite_iosxe.16.12.07.SPA.bin activate commit
        prompt: This operation may require a reload of the system. Do you want to proceed? 
        answer: y
        
## Change the boot variable to the new image
###   - name: Change Boot Variable to new image
###     ios_config:
###       commands:
###         - "boot system flash:cat9k_lite_iosxe.17.06.05.SPA.bin"
###       save_when: always

## Reload the device
###    - name: Reload the Device
###      cli_command:
###        command: reload
###        prompt:
###          - confirm
###        answer:
###          - 'y'

## Wait for Reachability to the device
    - name: Wait for device to come back online
      wait_for:
        host: "{{ inventory_hostname }}"
        #port: 22
        delay: 400
      #delegate_to: localhost

## Check current image

    - name: Check Image version
      ios_facts:

    - debug:
        msg:
          - "Current version is {{ ansible_net_version }}"

    - name: ASSERT THAT THE IOS VERSION IS CORRECT

#      vars:
#        desired_ios_version: desired_ios_version

      assert:
        that:
          - desired_ios_version == ansible_net_version
        fail_msg: 
          - "The desired upgrade version is: {{desired_ios_version}} The current version is: {{ansible_net_version}}"
          - "Upgrade FAILED"
        success_msg: "IOS upgrade has been SUCCESSFULLY completed"
    




